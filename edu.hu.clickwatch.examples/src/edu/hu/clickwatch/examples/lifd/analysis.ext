
import topology;

incomming(Node node):
	node.incomming.select(e|e.pdr + e.reverse.pdr > 15);

asym(Node node, Integer th):
	" " + node.incomming().select(l|(l.reverse.pdr - l.pdr) > th).size * 100 / node.incomming().size;

Void write(String x):
	JAVA edu.hu.clickwatch.examples.lifd.Util.write(java.lang.String);
	
performAnalysis(Topology topology, String time):
	topology.nodes.forAll(n|if (n.incomming().size > 0) then write(time + "\t" + n.ip + "\t" + "\t25\t" + asym(n, 25)) -> true) ->
	topology.nodes.forAll(n|if (n.incomming().size > 0) then write(time + "\t" + n.ip + "\t" + "\t50\t" + asym(n, 50)) -> true) ->
	topology.nodes.forAll(n|if (n.incomming().size > 0) then write(time + "\t" + n.ip + "\t" + "\t75\t" + asym(n, 75)) -> true);
	