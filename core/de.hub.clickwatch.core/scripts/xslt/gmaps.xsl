<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output method="html" version="4.0" encoding="iso-8859-1" indent="yes"/>

    <xsl:strip-space  elements="*"/>
    
    <!--  create html/jscript body -->
    <xsl:template match="/Network">
		<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml">
		  <head>
		    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
		    <title>HWL Outdoor Nodes generated by ClickWatch</title>
		    <script src="http://maps.google.com/maps?file=api&amp;v=2&amp;sensor=false&amp;key=ABQIAAAAJLpOq7-D6Pxtv3KwixdTgRSlSGVEMga0amhFtwmZepFMkUnhzBRAMVJkBKv0djRGQMODSufss_hDHw" type="text/javascript"></script>
		    <script type="text/javascript">
		
		    function initialize() {
		      	if (GBrowserIsCompatible()) {
			        var map = new GMap2(document.getElementById("map_canvas"));
   			        map.addControl(new GSmallMapControl());
			        map.addControl(new GMapTypeControl());
			    
			        // Define the two corners of the bounding box 
				var ne = new GLatLng(52.432521+0.001,13.532865);
				var sw = new GLatLng(52.42856,13.52715+0.001);    
    
		    		// Create a bounding box  
				var bounds = new GLatLngBounds(sw,ne);
				
				//Center map in the center of the bounding box and calculate the appropriate zoom level
				map.setCenter(bounds.getCenter(), map.getBoundsZoomLevel(bounds));
		    
				var xIcon;
				var marker;
				var polyline;

				<!-- create GMarker -->
				<xsl:apply-templates select="./node/gps/gps_coord/gps"/>
				<!-- create GPolyline -->
				<xsl:apply-templates select="./node/device_wifi/link_stat/bcast_stats/entry/link/link_info"/>
		   	}
		    }  
		    </script>
		  </head>
		
		  <body onload="initialize()" onunload="GUnload()" style="font-family: Arial;border: 0 none;">
		    <div id="map_canvas" style="width: 2000px; height: 1400px"></div>
		  </body>
		</html>        	
    </xsl:template>
    
    <xsl:template match="text()" />

    <!-- create GMarker -->    
    <xsl:template match="node/gps/gps_coord/gps">
    	<xsl:variable name="nodeIP" select="../../../@iNetAddress"/>
    	<xsl:variable name="chanUtil" select="../../../device_wifi/wifidevice/cst/stats_xml/channelstats/phy/@hwbusy"/>
	xIcon = new GIcon(G_DEFAULT_ICON);
	<xsl:choose>
	  <xsl:when test="$chanUtil &lt;= 30">
		xIcon.image = "wifi1.png";    
	  </xsl:when>
	  <xsl:when test="$chanUtil &gt; 30 and chanUtil &lt;= 60">
		xIcon.image = "wifi2.png";    
	  </xsl:when>
	  <xsl:otherwise>
	    xIcon.image = "wifi3.png";
	  </xsl:otherwise>
	</xsl:choose>
	xIcon.iconSize=new GSize(32,37);
	marker = new GMarker(new GLatLng(<xsl:value-of select="@lat" />, <xsl:value-of select="@long" />), { icon:xIcon });
	GEvent.addListener(marker, "click", function() {
		map.openInfoWindowTabsHtml(new GLatLng(<xsl:value-of select="@lat" />, <xsl:value-of select="@long" />), new Array(new GInfoWindowTab("Node info",
			"IP: <xsl:value-of select="$nodeIP" />, Hw_busy: <xsl:value-of select="$chanUtil" />")), {});
	});
	map.addOverlay(marker);    	
    </xsl:template>
    
    <!-- create GPolyline -->
    <xsl:template match="node/device_wifi/link_stat/bcast_stats/entry/link/link_info">
    
        <xsl:variable name="toAddr" select="../@to" /> 
        <xsl:variable name="fromAddr" select="../../@from" /> 
        <xsl:variable name="rate" select="@rate" /> 
        <xsl:variable name="size" select="@size" />
        <xsl:variable name="fromIP" select="../../../../../../@iNetAddress" />
        <xsl:variable name="toIP" select="//node/device_wifi/link_stat/bcast_stats/entry[@from=$toAddr]/../../../../@iNetAddress" />
        
        <xsl:variable name="pdr" select="@rev" /> 
        <xsl:variable name="revlinkinfo" select="//node/device_wifi/link_stat/bcast_stats/entry[@from=$toAddr]/link[@to=$fromAddr]/link_info[@rate=$rate and @size=$size]" />

        <xsl:variable name="rssi" select="//node/device_wifi/wifidevice/cst/stats_xml/channelstats[@node=$fromAddr]/neighbourstats/nb[@addr=$toAddr]/@rssi" />
        <xsl:variable name="revrssi" select="//node/device_wifi/wifidevice/cst/stats_xml/channelstats[@node=$toAddr]/neighbourstats/nb[@addr=$fromAddr]/@rssi" />
        
    	<xsl:variable name="gpsFromLat" select="//node[@iNetAddress=$toIP]/gps/gps_coord/gps/@lat" />
    	<xsl:variable name="gpsFromLong" select="//node[@iNetAddress=$toIP]/gps/gps_coord/gps/@long" />
        
    	<xsl:variable name="gpsToLat" select="//node[@iNetAddress=$fromIP]/gps/gps_coord/gps/@lat" />
    	<xsl:variable name="gpsToLong" select="//node[@iNetAddress=$fromIP]/gps/gps_coord/gps/@long" />
        
	polyline = new GPolyline(new Array(new GLatLng(<xsl:value-of select="$gpsFromLat" />, <xsl:value-of select="$gpsFromLong" />), new GLatLng(<xsl:value-of select="$gpsToLat" />, <xsl:value-of select="$gpsToLong" />)),
		"#FF0000", <xsl:value-of select="$pdr div 25" />, 0.6, {});
	GEvent.addListener(polyline, "click", function() {
		map.openInfoWindowTabsHtml(new GLatLng(<xsl:value-of select="$gpsToLat" />, <xsl:value-of select="$gpsToLong" />), new Array(new GInfoWindowTab("Link info",
				"Length: x m, RSSI: <xsl:value-of select="$revrssi" />, PDR: <xsl:value-of select="$pdr" />, Rate: <xsl:value-of select="$rate" />, Size: <xsl:value-of select="$size" />")), {});
	});
	map.addOverlay(polyline);
    </xsl:template>    

</xsl:stylesheet>