
(node,name,time,handler) = CWDB.apply();
(node)->{
	(time,handler)=Filter("seismo/lateststatinfo").apply(name,(time,handler))
	(time)->(channel,t,ampl)=SeismoInfo.apply(handler)
	(channel,t,ampl)=Collect.apply(time,(channel,t,ampl))
	(channel)->{
		(t,tw,ampl)=Window(1000).apply(t,ampl)
		(t)->(avg_ampl)=Avg.apply(tw,ampl)
		(t)->(ampl)=Sub.apply(ampl,avg_ampl)
		
		(t,tw,ampl)=Window(50).apply(t,ampl)
		(t)->{
			(f,fft)=FFT(100).apply(tw,ampl)
			(f,fb,fft)=Bin(5).apply(f,fft)
			(f)->(fft)=Avg.apply(fb,fft)	
		}	
	}
}

(node,name,time,handler) = CWDB.apply();
(time)->{
	(node)->{
		(handler)=Filter("link_stat").apply(name,handler)
		(from,to,pdr)=LinkInfo.apply(handler)
	}
	(from,to,pdr)=Collect.apply(node,(from,to,pdr))
	(node)->{
		(handler)=Filter("gps").apply(name,handler)
		(x,y,z)=GPSInfo.apply(handler)
	}
	(i,from,to)=Index.apply(from,to)
	(i)->(distance)=Distance.apply(from,to)(node,x,y,z)
}


(node>name>time:handler)=CWDB();
(node)>{
	(time:handler)=Filter["seismo/lateststatinfo"](name>time:handler)
	(time:channel>t:ampl)=(time:SeismoInfo(handler))
}

node>name>time:handler=CWDB();
node>channel>t:ampl=node>{
	time:handler=Filter["seimso/lateststatinfo"](name>time:handler)
	time:channel>t:ampl=time:SeismoInfo(handler)
	channel>t:ampl=Collect(time:channel>t:ampl)
	
	channel>t:ampl=channel>{
		t:tw:ampl=Window[size:1000](t:ampl)
		t:mavg=t:Avg(tw:ampl)
		t:ampl=t:Sub(ampl,mavg)
	}
	
	channel>t:fft=channel>{
		t:tw:ampl=Window[size:50](t:ampl)
		t:tw:fft=t:FFT[sample_rate:100](tw:fft)
		t:fb:fft=t:Bin[10](fb:fft)
	}
}

Function<FROM,TO> extends Iterator<FROM,TO> {
	Pair<FROM,TO> current();
}

Map<FROM,TO> {
	Collection<FROM> domain();
	TO get(FROM);
}

